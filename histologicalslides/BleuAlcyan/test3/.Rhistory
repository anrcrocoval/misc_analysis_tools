ncol(xn)
xn[1]
xn[1]+yn[1]
whos xn
plot(xn,yn)
xn:yn
coordinates<-c(xn:yn)
coordinates<-c(xn;yn)
coordinates<-c(xn,yn)
coordinates
plot(coordinates)
plot(coordinates)
coordinates<-c(t(xn),t(yn))
plot(coordinates)
coordinates(,1)
coordinates[,1]
coordinates[1,]
coordinates[1]
coordinates
summary(xn)
coordinates[,1]<-xn
size(xn)
ncol(xn)
nline(xn)
nl(xn)
coordinates<-c(xn,yn)
xn
dim(coordinates)<-c(1081,2)
coordinates
plot(coordinates)
# compute the 2D binned kernel density estimate
est <- bkde2D(coordinates, 
              bandwidth=c(3,3), 
              gridsize=c(4320,2160),
range.x=list(c(0,1),c(0,1)))
library("KernSmooth")
library("raster")
list(c(0,1),c(0,1))
help list
help(list)
 est <- bkde2D(coordinates, 
+               bandwidth=c(3,3), 
+               gridsize=c(4320,2160),
+ range.x=list(c(0,1),c(0,1)))
est <- bkde2D(coordinates, 
bandwith=c(3,3),
gridsize=c(1000,1000),
range.x=list(c(0,1),c(0,1)))
 est <- bkde2D(coordinates, 
bandwidth=c(3,3),
gridsize=c(1000,1000),
range.x=list(c(0,1),c(0,1)))
est.raster = raster(list(x=est$x1,y=est$x2,z=est$fhat))
plot(est.raster)
est <- bkde2D(coordinates, 
bandwidth=c(0.1,0.1),
gridsize=c(1000,1000),
range.x=list(c(0,1),c(0,1)))
est.raster = raster(list(x=est$x1,y=est$x2,z=est$fhat))
plot(est.raster)
est <- bkde2D(coordinates, 
bandwidth=c(0.01,0.01),
gridsize=c(1000,1000),
range.x=list(c(0,1),c(0,1)))
est.raster = raster(list(x=est$x1,y=est$x2,z=est$fhat))
plot(est.raster)
est <- bkde2D(coordinates, 
bandwidth=c(0.05,0.05),
gridsize=c(1000,1000),
range.x=list(c(0,1),c(0,1)))
est.raster = raster(list(x=est$x1,y=est$x2,z=est$fhat))
plot(est.raster)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/
wtiers2<-sum(a[b>(1/3)&b<=(2/3)])
wtiers3<-sum(a[b>(2/3)])
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-sum(a[b<=(1/3)])
btiers2<-sum(a[b>(1/3)&b<=(2/3)])
btiers3<-sum(a[b>(2/3)])
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNew.csv", row.names=FALSE)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/
wtiers2<-sum(a[b>(1/3)&b<=(2/3)])
wtiers3<-sum(a[b>(2/3)])
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-sum(a[b<=(1/3)])
btiers2<-sum(a[b>(1/3)&b<=(2/3)])
btiers3<-sum(a[b>(2/3)])
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNew.csv", row.names=FALSE)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/length(b<=(1/3))
wtiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(a[b>(1/3)&b<=(2/3))
wtiers3<-100*sum(a[b>(2/3)])/length(b>(2/3))
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-100*sum(a[b<=(1/3)])/length(b<=(1/3))
btiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(a[b>(1/3)&b<=(2/3))
btiers3<-100*sum(a[b>(2/3)])/length(b>(2/3))
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNew.csv", row.names=FALSE)
length(a[b>(1/3)&b<=(2/3))
length(a)
length(b>(2/3))
length(b>(1/3))
length(b)
length(a[b>1/3])
length(a[b>setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test")1/3])
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/length(a[b<=(1/3)])
wtiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(a[b>(1/3)&b<=(2/3)])
wtiers3<-100*sum(a[b>(2/3)])/length(a[b>(2/3)])
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-100*sum(a[b<=(1/3)])/length(a[b<=(1/3)])
btiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(a[b>(1/3)&b<=(2/3)])
btiers3<-100*sum(a[b>(2/3)])/length(a[b>(2/3)])
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNew.csv", row.names=FALSE)
length(a)
length(b)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/length(b)
wtiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(b))
wtiers3<-100*sum(a[b>(2/3)])/length(b)
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-100*sum(a[b<=(1/3)])/length(b)
btiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(b)
btiers3<-100*sum(a[b>(2/3)])/length(b)
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNew.csv", row.names=FALSE)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/length(b)
wtiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(b)
wtiers3<-100*sum(a[b>(2/3)])/length(b)
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-100*sum(a[b<=(1/3)])/length(b)
btiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(b)
btiers3<-100*sum(a[b>(2/3)])/length(b)
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNew.csv", row.names=FALSE)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test3")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
first<-1;
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
AUCred=sum(datW$storewidthum[-1])
#print(100*AUCred/length(datW$storewidthum[-1]))
#print(AUCred)
a<-datW$storewidthum[-1]
b<-datW$storenormalizedpos[-1]
wtiers1<-100*sum(a[b<=(1/3)])/length(b)
wtiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(b)
wtiers3<-100*sum(a[b>(2/3)])/length(b)
print(wtiers1)
print(wtiers2)
print(wtiers3)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
AUCgreen=sum(datBA$storeBApc[-1]*datW$storewidthum[-1])
print(100*AUCgreen/length(datBA$storeBApc[-1]))
print(AUCgreen)
#print(100*(100*AUCgreen/length(datBA$storeBApc[-1]))/(100*AUCred/length(datW$storewidthum[-1])))
print(AUCgreen/AUCred*100)
b<-datBA$storenormalizedposBA[-1]
a<-datBA$storeBApc[-1]*datW$storewidthum[-1]
btiers1<-100*sum(a[b<=(1/3)])/length(b)
btiers2<-100*sum(a[b>(1/3)&b<=(2/3)])/length(b)
btiers3<-100*sum(a[b>(2/3)])/length(b)
print(btiers1)
print(btiers2)
print(btiers3)
print(100*btiers1/wtiers1)
print(100*btiers2/wtiers2)
print(100*btiers3/wtiers3)
if(first==1){
finaltab<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
first<-0
}
else{
tableau<-data.frame(Image=n,AUCred_normalized=100*AUCred/length(datW$storewidthum[-1]), AUCgreen_normalized=100*AUCgreen/length(datBA$storeBApc[-1]),width_tiers1=wtiers1,width_tiers2=wtiers2, width_tiers3=wtiers3,BA_tiers1=btiers1,BA_tiers2=btiers2,BA_tiers3=btiers3)
finaltab<-rbind(finaltab,tableau)}
}
}
write.csv(finaltab,"resultAUCNewdata.csv", row.names=FALSE)
setwd("C:/Users/paul-gilloteaux-p/Documents/GitHub/ANRCROCOVAL/misc_analysis_tools/histologicalslides/BleuAlcyan/test3")
#file.choose()
# Install the released version from CRAN:
#install.packages("stringr")
#install.packages("zoo")
library("stringr")
library("zoo") #maybe to use rollmean
listfile=dir()
i=0
data=NULL
for (n in listfile)
{
if (grepl("Absolutewidth.csv", n)==TRUE)
{
print(n)
datW <-read.csv(n, sep=",")
plot(datW$storenormalizedpos[-1],datW$storewidthum[-1],type="b",pch=20, col =2,ylim=c(0,350)) #plot all but first element
par(new=TRUE)
n=str_replace(n, "Absolutewidth.csv", "AbsoluteBA.csv")
print(n)
datBA <-read.csv(n, sep=",")
plot(datBA$storenormalizedposBA[-1],datBA$storeBApc[-1]*datW$storewidthum[-1],type="b",pch=20,col=3, ylim=c(0,350),axes = FALSE, xlab="",ylab="") #plot all but first element
title(str_replace(n, "AbsoluteBA.csv",""))
readline(prompt="Press [enter] to continue")
readline(prompt="Press [enter] to continue")
par(new=FALSE)
plot(rollmean(datBA$storeBApc[-1]*100,10),type="b",pch=20,col=3, ylim=c(0,100)) #plot all but first element
title(str_replace(n, "AbsoluteBA.csv",""))
readline(prompt="Press [enter] to continue")
readline(prompt="Press [enter] to continue")
}
}
q()
